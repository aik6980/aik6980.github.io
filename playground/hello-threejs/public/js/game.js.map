{"version":3,"sources":["game.ts"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["\r\nvar scene : THREE.Scene;\r\nvar camera : THREE.PerspectiveCamera;\r\nvar renderer : THREE.WebGLRenderer;\r\n\r\nfunction init() {\r\n\r\n    scene = new THREE.Scene();\r\n\r\n    var vs_str : string;\r\n    var ps_str : string;\r\n    // test loading file\r\n    var loader = new THREE.FileLoader();\r\n    loader.setPath(\"public/js/shaders/\");\r\n    /*\r\n    loader.load(\"gbuffer.vs.glsl\", \r\n        function( data : string ){\r\n            // console.log(data);\r\n            vs_str = data;\r\n            loader.load(\"gbuffer.ps.glsl\", \r\n            function( data : string ){\r\n                ps_str = data;\r\n\r\n                var uniforms = {\r\n                    t_albedo : { type: \"t\", value: THREE.ImageUtils.loadTexture(\"public/js/shaders/checker.jpg\") }\r\n                };\r\n\r\n                var material = new THREE.ShaderMaterial({\r\n                    uniforms : uniforms, \r\n                    vertexShader : vs_str,\r\n                    fragmentShader : ps_str  \r\n                });\r\n\r\n                var box_geom = new THREE.BoxGeometry(1,1,1);\r\n                var box = new THREE.Mesh(box_geom, material);\r\n                box.position.y = 2.25;\r\n                scene.add(box);\r\n            }); \r\n        });\r\n    */\r\n\r\n    var loaded_vs : Promise<string> = new Promise( function(resolve, reject) {\r\n        loader.load(\"gbuffer.vs.glsl\", function( data : string ){ resolve(data); });\r\n    });\r\n    var loaded_ps : Promise<string> = new Promise( function(resolve, reject) {\r\n        loader.load(\"gbuffer.ps.glsl\", function( data : string ){ resolve(data); });\r\n    });\r\n\r\n    Promise.all( [loaded_vs, loaded_ps] ).then(function(values : Array<string> ){ \r\n        //console.log(values);\r\n        var uniforms = {\r\n            t_albedo : { type: \"t\", value: THREE.ImageUtils.loadTexture(\"public/js/shaders/checker.jpg\") }\r\n        };\r\n\r\n        var material = new THREE.ShaderMaterial({\r\n            uniforms : uniforms, \r\n            vertexShader : values[0],\r\n            fragmentShader : values[1]  \r\n        });\r\n\r\n        var box_geom = new THREE.BoxGeometry(1,1,1);\r\n        var box = new THREE.Mesh(box_geom, material);\r\n        box.position.y = 2.25;\r\n        scene.add(box);\r\n    });\r\n\r\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(256, 256);\r\n\r\n    document.body.appendChild( renderer.domElement );\r\n\r\n    // scene init\r\n    var box_geom = new THREE.BoxGeometry(1,1,1);\r\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 });\r\n    var box = new THREE.Mesh(box_geom, material);\r\n    scene.add(box);\r\n\r\n    camera.position.z = 5;\r\n}\r\n\r\nfunction render() {\r\n\r\n    requestAnimationFrame(render);\r\n    renderer.render(scene, camera);\r\n}\r\n\r\ninit();\r\nrender();"],"sourceRoot":"../.."}